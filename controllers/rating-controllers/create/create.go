package createRating

import (
	"context"
	"net/http"
	"themoviebakery/config"
	"themoviebakery/models"
	"time"

	"github.com/gin-gonic/gin"
	"github.com/teris-io/shortid"
)

func CreateRating(ginContext *gin.Context) {
	mongoNewConnection := config.ConnectMongo("ratings")

	// {
	//   "ratingId": "", // AUTO GENERATED BY LIB
	//   "userId": "", // from user
	//   "movieId": "", // from movie
	//   "ratingValue": "", // 0.5 to 5
	//   "created_at": "", // AUTO GENERATED BY LIB
	//   "updated_at": "" // AUTO GENERATED BY LIB
	// }
	var ratingBody models.RatingTypeInsert
	ginContext.ShouldBindJSON(&ratingBody)

	sid, err := shortid.New(1, shortid.DefaultABC, 2342)
	if err != nil {
		panic(err)
	}

	shortid.SetDefault(sid)

	shortId, err := sid.Generate()
	if err != nil {
		panic(err)
	}

	ratingBody.RatingId = shortId
	ratingBody.CreatedAt = time.Now()
	ratingBody.UpdatedAt = time.Now()

	res, err := mongoNewConnection.Collection.InsertOne(context.TODO(), ratingBody)
	if err != nil {
		panic(err)
	}

	defer mongoNewConnection.Disconnect()

	ginContext.IndentedJSON(http.StatusOK, res)
}
